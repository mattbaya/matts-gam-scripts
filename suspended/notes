the main script to run here is :
file-rename.sh username 
this calls /opt/organization/mjb9/listshared scripts that build csv files and create a file of only the shared files, which then gets renamed. 
-----------------

gam update user milo@example.edu org "Suspended Accounts"

for i in $(cat suspended-round2.txt); do echo $i","$(gam info user $i | awk -F': ' '/Groups:/ {user=$2} /Groups: \([0-9]+\)/ {getline; getline; gsub(/^ +| +$/, "", $1); print $2}'); done >> groups2.txt

cat groups2.txt |grep quota > suspended-in-quota-groups.csvcat

gam update group <group_email> remove member <user_email>

label  - vsltZcBDC0xJm62rO2kBqi7biuNuEX7OO0HRNNEbbFcb
badged label - xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb


https://groups.google.com/g/google-apps-manager/c/qYj0PlCxpy4
about using labels and badged labels:

Like William said, when you're applying just the badge label (which you probably wouldn't ever want to do?), you can use just addlabel and then the label ID.
...but more likely, you're you're adding a specific option from that badge label (like the "to be deleted" option), so you need to use addlabelfield instead and then both the label ID and then the label field ID. Turns out you actually need a third ID for badge labels, which is the particular selection ID. So for badge labels, the syntax is actually:

gam <UserTypeEntity> process filedrivelabels <DriveFileEntity> addlabelfield <DriveLabelID> <DriveLabelFieldID> selection <DriveLabelSelectionIDList>

I was having trouble finding those last two field IDs within the messy output from show/print drivelabels full (btw, "show" is much more readable), so here's what it will look like (non essential stuff removed):

User: someone@somewhere.com, Show 1 Drive Labels
  Drive Label Name: labels/NRD7VkLrcWzdUDYnBa9WwIJHgWGCSpMaOMYRNNEbbFcb@20 (1/2)   <-- THE BOLD PART HERE IS THE DRIVELABELID
(in the above example NRD7VkLrcWzdUDYnBa9WwIJHgWGCSpMaOMYRNNEbbFcb was bolded)
    ...
     (Misc attributes omitted here for brevity)
     ....
    fields:
      id: 6139D2C963   <-- THIS IS THE DRIVELABELFIELDID
       ....
        (more omitted stuff)
        .....
        properties:
          displayName: Warning   <-- PLAINTEXT NAME OF THE BADGE
          .....
          (more omitted stuff)
           .....
        selectionOptions:
          choices:
            id: E33C5047AC  <--- THIS IS THE SELECTION ID. IN OUR EXAMPLE, THIS CORRESPONDS TO "TO BE DELETED"
            ....
            ....
                description: This files will be deleted on xx/xx/xxxx
                displayName: To Be Deleted:q! 



gam user mjb9@example.edu process filedrivelabels 1_RqDyaaFj7_Aw3U-xpmKbpoUMZICRhj5ECM5mw7XhiM addlabel xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb addlabelfield xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb 62BB395EC6 selection "68E9987D43"

gam user milo@example.edu process filedrivelabels 1Gv0aD3iOHV5CwpCOuZq02vRC6b_Z1rOZ addlabelfield xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb 62BB395EC6 selection 68E9987D43

gam user milo@example.edu add license "Google Workspace for Education Plus"
gam user milo@example.edu delete license "Google Workspace for Education Plus"

for i in $(cat milo@example.edu_all_files.csv |awk -F, '{print $2}'); do gam user milo@example.edu process filedrivelabels $i addlabel xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb addlabelfield xIaFm0zxPw8zVL2nVZEI9L7u9eGOz15AZbJRNNEbbFcb 62BB395EC6 selection "68E9987D43";done

/root/bin/gamadv-x/gam print users query "isSuspended=true"

/root/bin/gamadv-x/gam print users todrive query "isSuspended=true" lastLoginTime fullname
 /root/bin/gamadv-x/gam user gam-admin-address add drivefileacl 1Pvik4_YxCijAogNpk5Bj9tFNZvg9aMPwR0xetx-766A user mjb9@example.edu role writer

check if suspended:
for i in $(cat 2023.txt); do echo $i; gam info user $i|grep "Account Suspended"; done>2023-status.txt
for i in $(cat 2023-suspended.txt|grep -E '^(a|b|c|d)'); do ./move-into-suspended-users-ou.sh $i;done

Creates a list of all 'orphaned' files (which I think means files that are owned by this user but stored in another user's google drive folders that they no longer have access to). 
gam user milo collect orphans targetuserfoldername "Orphans - #user#" useshortcuts


If the user owns the parent folder, it will return an ID here
$GAM user mjb9 show fileinfo 1l4vzOy2BiPvn5j0jmd-mC7IIbvLYBHty fields parents|grep id
then if you take the above ID and get info on it, you can get the owners username:
$GAM user mjb9 show fileinfo 1vzkcO5r0ii6zRXzQ27JlLtCUPr9tJgdH owners|grep emailAddress|awk -F": " '{print $2}'

gam print users query "orgUnitPath:'/Suspended Accounts'">suspended-ou-2023-10-19.txt
